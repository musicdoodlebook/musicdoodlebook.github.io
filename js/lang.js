import{createErrorElement}from"./util.js";import{getCSSValueFromElement}from"./util.js";import{getSectionHideShowFunction,getFooterHideShowFunction}from"./util.js";import{isEmptyObject}from"./util.js";import{embedNLatestVideo}from"./youtube.js";import{globalActiveSectionId}from"./navigation.js";let globalLanguage;const LANGUAGE_ERROR_MESSAGE={ko:"언어를 변경하지 못했습니다.",en:"Failed to change language.",ja:"言語の変更に失敗しました。"};function openLanguagePopup(){document.getElementById("language-popup").style.display="block";document.body.classList.add("modal-active");document.getElementById("popup-overlay").style.display="block"}function closeLanguagePopup(){document.getElementById("language-popup").style.display="none";document.body.classList.remove("modal-active");document.getElementById("popup-overlay").style.display="none"}async function handleLanguageChange(e){const button=e.target.closest(".language-button");if(button){const lang=button.getAttribute("data-lang");closeLanguagePopup();changeLanguage(lang)}}async function changeLanguage(lang){if(globalLanguage===lang){return}globalLanguage=lang;const[hideHome,showHome]=getSectionHideShowFunction("home");const[hideMusic,showMusic]=getSectionHideShowFunction("music");const[hideDownload,showDownload]=getSectionHideShowFunction("download");const[hideFooter,showFooter]=getFooterHideShowFunction();hideHome();hideMusic();hideDownload();hideFooter();let data;try{const response=await fetch(`lang/${lang}.json`);if(!response.ok){throw new Error(`Failed to fetch language file: ${response.statusText}`)}data=await response.json()}catch(error){console.error("Error loading language file:",error);const languageErrorEvent=new CustomEvent("languageErrorEvent",{detail:{message:LANGUAGE_ERROR_MESSAGE[lang],language:lang}});window.dispatchEvent(languageErrorEvent);data={}}document.documentElement.lang=lang;processHeadElements(data);processNavigator(data);processSections(data);async function createSectionErrorMessage(sectionId){const section=document.querySelector(`#${sectionId} .content`);const errorElement=createErrorElement(lang,true,"largeFlex");section.innerHTML="";section.appendChild(errorElement)}async function processNavigator(data){await updateSectionDataI18N("nav",data)}async function processHome(data){await updateSectionDataI18N("#home",data);showHome()}async function processMusic(data){try{await Promise.all([updateSectionDataI18N("#music",data),embedNLatestVideo(lang)])}catch(error){console.error("Failed to update music section:",error);createSectionErrorMessage("music")}finally{showMusic()}}async function processDownload(data){try{await Promise.all([updateSectionDataI18N("#download",data),createDownlodSection(data.download.resources)])}catch(error){console.error("Error loading download resources:",error);createSectionErrorMessage("download")}finally{showDownload()}}function processSections(data){const processFunctionMapping={home:processHome,music:processMusic,download:processDownload};function getLanguageProcessingOrder(activeSectionId){const sectionIds=Object.keys(processFunctionMapping);const remainingSectionIds=sectionIds.filter(str=>str!==activeSectionId);return[activeSectionId,...remainingSectionIds]}const firstProcessFunction=processFunctionMapping[globalActiveSectionId];processFunctionMapping[globalActiveSectionId]=async data=>{await firstProcessFunction(data);showFooter()};const processOrder=getLanguageProcessingOrder(globalActiveSectionId);for(const sectionId of processOrder){processFunctionMapping[sectionId](data)}}async function processHeadElements(data){if(isEmptyObject(data)){return}document.title=data.metadata.title;document.querySelector('meta[name="description"]').content=data.metadata.description}}async function updateSectionDataI18N(sectionQuery,data){if(isEmptyObject(data)){return}document.querySelectorAll(`${sectionQuery} [data-i18n]`).forEach(element=>{const key=element.getAttribute("data-i18n");const keys=key.split(".");let text=data;keys.forEach(k=>{text=text[k]});element.innerText=text})}async function createDownlodSection(data){const downloadSection=document.querySelector(".download-container");downloadSection.innerHTML="";const margin=getCSSValueFromElement(downloadSection,"font-size");const collapsibleSection=createCollapsibleSection(data,margin);downloadSection.appendChild(collapsibleSection)}function createCollapsibleSection(obj,margin="15px"){const fragment=document.createDocumentFragment();try{const sortedKeys=Object.keys(obj).sort();for(const key of sortedKeys){if(typeof obj[key]==="object"){const details=document.createElement("details");const summary=document.createElement("summary");summary.textContent=key;details.appendChild(summary);details.appendChild(createCollapsibleSection(obj[key],margin));details.style.marginLeft=margin;fragment.appendChild(details)}else{const link=document.createElement("a");link.href=obj[key];link.target="_blank";const icon=document.createElement("i");icon.classList.add("fa");const fileExtension=obj[key].split(".").pop().toLowerCase();switch(fileExtension){case"pdf":icon.classList.add("fa-file-pdf-o");break;case"mid":case"midi":icon.classList.add("fa-file-audio-o");break;case"mp3":case"wav":icon.classList.add("fa-file-audio-o");break;default:icon.classList.add("fa-file-o")}link.appendChild(icon);link.appendChild(document.createTextNode(" "+key));const container=document.createElement("div");container.style.marginLeft=margin;container.appendChild(link);fragment.appendChild(container)}}}catch(error){console.error("Error during creating download links:",error);const errorElement=createErrorElement();fragment.appendChild(errorElement)}return fragment}function addLanguageSaver(){window.addEventListener("beforeunload",function(){sessionStorage.setItem("globalLanguage",globalLanguage)})}function setDefaultLanguage(){let lang=sessionStorage.getItem("globalLanguage");if(!lang){try{const userLang=navigator.language||navigator.userLanguage;if(userLang.startsWith("ko")){lang="ko"}else if(userLang.startsWith("ja")){lang="ja"}else{lang="en"}}catch(error){console.error("Error setting language based on browser settings:",error);lang="en"}}changeLanguage(lang)}function openLanguageErrorPopup(e){document.getElementById("language-error-popup").style.display="block";document.body.classList.add("modal-active");document.getElementById("popup-overlay").style.display="block";document.getElementById("popup-overlay").style.backgroundColor="#000000ff";const errorText=document.querySelector("#language-error-content p");errorText.textContent=e.detail.message}function closeLanguageErrorPopup(e){document.getElementById("language-error-popup").style.display="none";document.body.classList.remove("modal-active");document.getElementById("popup-overlay").style.display="none";document.getElementById("popup-overlay").style.backgroundColor="#00000000"}document.addEventListener("DOMContentLoaded",()=>{addLanguageSaver();setDefaultLanguage();const languagePopup=document.getElementById("language-popup");languagePopup.addEventListener("click",handleLanguageChange);const languageSelectors=document.querySelectorAll(".language-selector");languageSelectors.forEach(selector=>selector.addEventListener("click",e=>{e.preventDefault();openLanguagePopup()}));document.getElementById("popup-overlay").addEventListener("click",closeLanguagePopup);window.addEventListener("languageErrorEvent",openLanguageErrorPopup);document.getElementById("popup-overlay").addEventListener("click",closeLanguageErrorPopup);document.getElementById("language-error-popup").addEventListener("click",closeLanguageErrorPopup)});